{"version":3,"file":"v4.mjs","sources":["../../node_modules/u8-mqtt-packet/esm/index.mjs","../../code/session.mjs","../../code/_conn.jsy","../../node_modules/regexparam/dist/regexparam.mjs","../../code/_router.jsy","../../code/_cmdid_dispatch.jsy","../../code/_dispatch.jsy","../../code/base.jsy","../../code/core.jsy","../../code/v4.mjs"],"sourcesContent":["function encode_varint(n, a=[]) {\n  do {\n    const ni = n & 0x7f;\n    n >>>= 7;\n    a.push( ni | (0===n ? 0 : 0x80) );\n  } while (n > 0)\n  return a\n}\n\n\n/*\nexport function decode_varint_loop(u8, i=0) {\n  let shift = 0, n = (u8[i] & 0x7f)\n  while ( 0x80 & u8[i++] )\n    n |= (u8[i] & 0x7f) << (shift += 7)\n\n  return [n, i]\n}\n*/\n\n\nfunction decode_varint(u8, i=0) {\n  // unrolled for a max of 4 chains\n  let n = (u8[i] & 0x7f) <<  0;\n  if ( 0x80 & u8[i++] ) {\n    n |= (u8[i] & 0x7f) <<  7;\n    if ( 0x80 & u8[i++] ) {\n      n |= (u8[i] & 0x7f) << 14;\n      if ( 0x80 & u8[i++] ) {\n        n |= (u8[i] & 0x7f) << 21;\n      }\n    }\n  }\n  return [n, i]\n}\n\nfunction _mqtt_raw_pkt_decode_v(by_ref) {\n  const [u8] = by_ref;\n  const [len_body, len_vh] = decode_varint(u8, 1);\n\n  const len_pkt = len_body + len_vh;\n  if ( u8.byteLength < len_pkt ) {\n    by_ref.length = 1; // truncate\n    return true\n  }\n\n  by_ref[0] = u8.subarray(len_pkt);\n  by_ref[1] = u8[0];\n  by_ref[2] = 0 === len_body ? null\n      : u8.subarray(len_vh, len_pkt);\n}\n\n\nfunction _mqtt_raw_pkt_dispatch(decode_raw_pkt) {\n  const l = [new Uint8Array(0)]; // reuse array to prevent garbage collection churn on ephemeral ones\n  return u8_buf => {\n    l[0] = 0 === l[0].byteLength\n      ? u8_buf : _u8_join(l[0], u8_buf);\n\n    const res = [];\n    do {\n      if (_mqtt_raw_pkt_decode_v(l))\n        return res\n\n      const pkt = decode_raw_pkt(l[1], l[2]);\n      if (undefined !== pkt && null !== pkt)\n        res.push( pkt );\n    } while (1)\n  }\n}\n\n\nfunction _u8_join(a, b) {\n  const alen = a.byteLength;\n  const r = new Uint8Array(alen + b.byteLength);\n  r.set(a, 0);\n  r.set(b, alen);\n  return r\n}\n\nconst mqtt_props = new Map(); \n\n{\n  const entries = [\n    [ 0x01, 'u8',   'payload_format_indicator'],\n    [ 0x02, 'u32',  'message_expiry_interval'],\n    [ 0x03, 'utf8', 'content_type'],\n    [ 0x08, 'utf8', 'response_topic'],\n    [ 0x09, 'bin',  'correlation_data'],\n    [ 0x0B, 'vint', 'subscription_identifier'],\n    [ 0x11, 'u32',  'session_expiry_interval'],\n    [ 0x12, 'utf8', 'assigned_client_identifier'],\n    [ 0x13, 'u16',  'server_keep_alive'],\n    [ 0x15, 'utf8', 'authentication_method'],\n    [ 0x16, 'bin',  'authentication_data'],\n    [ 0x17, 'u8',   'request_problem_information'],\n    [ 0x18, 'u32',  'will_delay_interval'],\n    [ 0x19, 'u8',   'request_response_information'],\n    [ 0x1A, 'utf8', 'response_information'],\n    [ 0x1C, 'utf8', 'server_reference'],\n    [ 0x1F, 'utf8', 'reason_string'],\n    [ 0x21, 'u16',  'receive_maximum'],\n    [ 0x22, 'u16',  'topic_alias_maximum'],\n    [ 0x23, 'u16',  'topic_alias'],\n    [ 0x24, 'u8',   'maximum_qo_s'],\n    [ 0x25, 'u8',   'retain_available'],\n    [ 0x26, 'pair', 'user_properties', true],\n    [ 0x27, 'u32',  'maximum_packet_size'],\n    [ 0x28, 'u8',   'wildcard_subscription_available'],\n    [ 0x29, 'u8',   'subscription_identifiers_available', true],\n    [ 0x2A, 'u8',   'shared_subscription_available'],\n  ];\n\n  for (const [id, type, name, plural] of entries) {\n    const prop_obj = {id, type, name};\n    if (plural) prop_obj.plural = plural;\n    mqtt_props.set(prop_obj.id, prop_obj);\n    mqtt_props.set(prop_obj.name, prop_obj);\n  }\n}\n\nconst as_utf8 = u8 =>\n  new TextDecoder('utf-8').decode(u8);\n\nconst step_from = idx =>\n  (width, r) => ( r = idx, idx += width, r );\n\nclass mqtt_type_reader {\n  constructor(buf, idx=0) {\n    this.buf = buf;\n    this.step = step_from(idx);\n  }\n\n  _fork(buf, idx) {\n    return { __proto__: this, buf, step: step_from(idx) }\n  }\n\n  has_more() {\n    const {buf, step} = this;\n    return buf.byteLength > step(0)\n  }\n\n  u8() {\n    const {buf, step} = this;\n    return buf[step(1)]\n  }\n\n  u16() {\n    const {buf, step} = this;\n    const i = step(2);\n    return (buf[i]<<8) | buf[i+1]\n  }\n\n  u32() {\n    const {buf, step} = this;\n    const i = step(4);\n    return (buf[i]<<24) | (buf[i+1]<<16) | (buf[i+2]<<8) | buf[i+3]\n  }\n\n  vint() {\n    const {buf, step} = this;\n    const [n, vi] = decode_varint(buf, step(0));\n    step(vi);\n    return n\n  }\n\n  bin() {\n    const {buf, step} = this;\n    const i = step(2);\n    const len = (buf[i]<<8) | buf[i+1];\n    const i0 = step(len);\n    return buf.subarray(i0, i0+len)\n  }\n\n  utf8() { return as_utf8(this.bin()) }\n  pair() { return [ as_utf8(this.bin()), as_utf8(this.bin()) ] }\n\n  u8_flags(FlagsType) {\n    const {buf, step} = this;\n    return new FlagsType(buf[step(1)])\n  }\n\n  u8_reason(fn_reason) {\n    const {buf, step} = this;\n    return fn_reason( buf[step(1)] )\n  }\n\n  flush() {\n    const {buf, step} = this;\n    this.step = this.buf = null;\n    return buf.subarray(step(0))\n  }\n\n  props() {\n    const {buf, step} = this;\n\n    const [len, vi] = decode_varint(buf, step(0));\n    const end_part = vi + len;\n    step(end_part);\n    if (0 === len)\n      return null\n\n    const prop_entries = [];\n    const rdr = this._fork(\n      buf.subarray(vi, end_part) );\n\n    while (rdr.has_more()) {\n      const {name, type} = mqtt_props.get( rdr.u8() );\n      const value = rdr[type]();\n      prop_entries.push([ name, value ]);\n    }\n\n    return prop_entries\n  }\n}\n\n\n\nclass U8_Reason extends Number {\n  constructor(u8, reason) { super(u8); this.reason = reason; }\n}\n\nfunction bind_reason_lookup(reason_entries) {\n  const reason_map = new Map();\n  for (const [u8, reason] of reason_entries)\n    reason_map.set( u8, new U8_Reason(u8, reason) );\n\n  return reason_map.get.bind(reason_map)\n}\n\nfunction mqtt_decode_connect(ns) {\n  class _connect_flags_ extends Number {\n    get reserved() { return this & 0x01 !== 0 }\n    get clean_start() { return this & 0x02 !== 0 }\n    get will_flag() { return this & 0x04 !== 0 }\n    get will_qos() { return (this >>> 3) & 0x3 }\n    get will_retain() { return this & 0x20 !== 0 }\n    get password() { return this & 0x40 !== 0 }\n    get username() { return this & 0x80 !== 0 }\n  }\n\n\n  return ns[0x1] = (pkt, u8_body) => {\n    const rdr = new mqtt_type_reader(u8_body, 0);\n    if ('MQTT' !== rdr.utf8())\n      throw new Error('Invalid mqtt_connect packet')\n\n    pkt._base_.mqtt_level = pkt.mqtt_level = rdr.u8();\n\n    const flags = pkt.flags =\n      rdr.u8_flags(_connect_flags_);\n\n    pkt.keep_alive = rdr.u16();\n\n    if (5 <= pkt.mqtt_level)\n      pkt.props = rdr.props();\n\n\n\n    pkt.client_id = rdr.utf8();\n    if (flags.will_flag) {\n      const will = pkt.will = {};\n      if (5 <= pkt.mqtt_level)\n        will.props = rdr.props();\n\n      will.topic = rdr.utf8();\n      will.payload = rdr.bin();\n      will.qos = flags.will_qos;\n      will.retain = flags.will_retain;\n    }\n\n    if (flags.username)\n      pkt.username = rdr.utf8();\n\n    if (flags.password)\n      pkt.password = rdr.bin();\n    return pkt }\n}\n\nfunction mqtt_decode_connack(ns) {\n  class _connack_flags_ extends Number {\n    get session_present() { return this & 0x01 !== 0 }\n  }\n\n  const _connack_reason_ = bind_reason_lookup([\n    // MQTT 3.1.1\n    [ 0x00, 'Success'],\n    [ 0x01, 'Connection refused, unacceptable protocol version'],\n    [ 0x02, 'Connection refused, identifier rejected'],\n    [ 0x03, 'Connection refused, server unavailable'],\n    [ 0x04, 'Connection refused, bad user name or password'],\n    [ 0x05, 'Connection refused, not authorized'],\n\n    // MQTT 5.0\n    [ 0x81, 'Malformed Packet'],\n    [ 0x82, 'Protocol Error'],\n    [ 0x83, 'Implementation specific error'],\n    [ 0x84, 'Unsupported Protocol Version'],\n    [ 0x85, 'Client Identifier not valid'],\n    [ 0x86, 'Bad User Name or Password'],\n    [ 0x87, 'Not authorized'],\n    [ 0x88, 'Server unavailable'],\n    [ 0x89, 'Server busy'],\n    [ 0x8A, 'Banned'],\n    [ 0x8C, 'Bad authentication method'],\n    [ 0x90, 'Topic Name invalid'],\n    [ 0x95, 'Packet too large'],\n    [ 0x97, 'Quota exceeded'],\n    [ 0x99, 'Payload format invalid'],\n    [ 0x9A, 'Retain not supported'],\n    [ 0x9B, 'QoS not supported'],\n    [ 0x9C, 'Use another server'],\n    [ 0x9D, 'Server moved'],\n    [ 0x9F, 'Connection rate exceeded'],\n  ]);\n\n\n  return ns[0x2] = (pkt, u8_body) => {\n    const rdr = new mqtt_type_reader(u8_body, 0);\n\n    const flags = pkt.flags =\n      rdr.u8_flags(_connack_flags_);\n\n    pkt.reason = rdr.u8_reason(_connack_reason_);\n    if (5 <= pkt.mqtt_level)\n      pkt.props = rdr.props();\n    return pkt }\n}\n\nfunction mqtt_decode_publish(ns) {\n  return ns[0x3] = (pkt, u8_body) => {\n    const {hdr} = pkt;\n    pkt.dup = Boolean(hdr & 0x8);\n    pkt.retain = Boolean(hdr & 0x1);\n    const qos = pkt.qos = (hdr>>1) & 0x3;\n\n    const rdr = new mqtt_type_reader(u8_body, 0);\n    pkt.topic = rdr.utf8();\n    if (0 !== qos)\n      pkt.pkt_id = rdr.u16();\n\n    if (5 <= pkt.mqtt_level) {\n      pkt.props = rdr.props();\n      pkt.payload = rdr.flush();\n    } else {\n      pkt.payload = rdr.flush();\n    }\n\n    return pkt }\n}\n\nfunction mqtt_decode_puback(ns) {\n  const _puback_reason_ = bind_reason_lookup([\n    [ 0x00, 'Success'],\n\n    // MQTT 5.0\n    [ 0x10, 'No matching subscribers'],\n    [ 0x80, 'Unspecified error'],\n    [ 0x83, 'Implementation specific error'],\n    [ 0x87, 'Not authorized'],\n    [ 0x90, 'Topic Name invalid'],\n    [ 0x91, 'Packet identifier in use'],\n    [ 0x97, 'Quota exceeded'],\n    [ 0x99, 'Payload format invalid'],\n  ]);\n\n\n  return ns[0x4] = (pkt, u8_body) => {\n    const rdr = new mqtt_type_reader(u8_body, 0);\n\n    pkt.pkt_id = rdr.u16();\n    if (5 <= pkt.mqtt_level) {\n      pkt.reason = rdr.u8_reason(_puback_reason_);\n      pkt.props = rdr.props();\n    }\n\n    return pkt }\n}\n\nfunction mqtt_decode_pubxxx(ns) {\n  const _pubxxx_reason_ = bind_reason_lookup([\n    [ 0x00, 'Success' ],\n    [ 0x92, 'Packet Identifier not found' ],\n  ]);\n\n  return ns[0x5] = ns[0x6] = ns[0x7] = (pkt, u8_body) => {\n    const rdr = new mqtt_type_reader(u8_body, 0);\n\n    pkt.pkt_id = rdr.u16();\n    pkt.reason = rdr.u8_reason(_pubxxx_reason_);\n    if (5 <= pkt.mqtt_level)\n      pkt.props = rdr.props();\n    return pkt }\n}\n\nfunction mqtt_decode_subscribe(ns) {\n  class _subscription_options_ extends Number {\n    get qos() { return this & 0x3 }\n    get retain() { return this & 0x4 !== 0 }\n    get retain_handling() { return (this >> 2) & 0x3 }\n  }\n\n  return ns[0x8] = (pkt, u8_body) => {\n    const rdr = new mqtt_type_reader(u8_body, 0);\n\n    pkt.pkt_id = rdr.u16();\n    if (5 <= pkt.mqtt_level)\n      pkt.props = rdr.props();\n\n    const topic_list = pkt.topics = [];\n    while (rdr.has_more())\n      topic_list.push({\n        topic: rdr.utf8(),\n        opts: rdr.u8_flags(_subscription_options_) });\n\n    return pkt }\n}\n\nfunction _mqtt_decode_suback(_ack_reason_) {\n  return (pkt, u8_body) => {\n    const rdr = new mqtt_type_reader(u8_body, 0);\n\n    pkt.pkt_id = rdr.u16();\n    if (5 <= pkt.mqtt_level)\n      pkt.props = rdr.props();\n\n    const answers = pkt.answers = [];\n    while (rdr.has_more())\n      answers.push(\n        rdr.u8_reason(_ack_reason_) );\n\n    return pkt }\n}\n\nfunction mqtt_decode_suback(ns) {\n  const _suback_reason_ = bind_reason_lookup([\n    // MQTT 3.1.1\n    [ 0x00, 'Granted QoS 0'],\n    [ 0x01, 'Granted QoS 1'],\n    [ 0x02, 'Granted QoS 2'],\n\n    // MQTT 5.0\n    [ 0x80, 'Unspecified error'],\n    [ 0x83, 'Implementation specific error'],\n    [ 0x87, 'Not authorized'],\n    [ 0x8F, 'Topic Filter invalid'],\n    [ 0x91, 'Packet Identifier in use'],\n    [ 0x97, 'Quota exceeded'],\n    [ 0x9E, 'Shared Subscriptions not supported'],\n    [ 0xA1, 'Subscription Identifiers not supported'],\n    [ 0xA2, 'Wildcard Subscriptions not supported'],\n  ]);\n\n  return ns[0x9] = _mqtt_decode_suback(_suback_reason_)\n}\n\nfunction mqtt_decode_unsubscribe(ns) {\n  return ns[0xa] = (pkt, u8_body) => {\n    const rdr = new mqtt_type_reader(u8_body, 0);\n\n    pkt.pkt_id = rdr.u16();\n    if (5 <= pkt.mqtt_level)\n      pkt.props = rdr.props();\n\n    const topic_list = pkt.topics = [];\n    while (rdr.has_more())\n      topic_list.push(rdr.utf8());\n\n    return pkt }\n}\n\nfunction mqtt_decode_unsuback(ns) {\n  const _unsuback_reason_ = bind_reason_lookup([\n    [ 0x00, 'Success'],\n    [ 0x11, 'No subscription existed'],\n    [ 0x80, 'Unspecified error'],\n    [ 0x83, 'Implementation specific error'],\n    [ 0x87, 'Not authorized'],\n    [ 0x8F, 'Topic Filter invalid'],\n    [ 0x91, 'Packet Identifier in use'],\n  ]);\n\n  return ns[0xb] = _mqtt_decode_suback(_unsuback_reason_)\n}\n\nfunction mqtt_decode_pingxxx(ns) {\n  return ns[0xc] = ns[0xd] = pkt => pkt\n}\n\nfunction mqtt_decode_disconnect(ns) {\n  const _disconnect_reason_ = bind_reason_lookup([\n    // MQTT 5.0\n    [ 0x00, 'Normal disconnection'],\n    [ 0x04, 'Disconnect with Will Message'],\n    [ 0x80, 'Unspecified error'],\n    [ 0x81, 'Malformed Packet'],\n    [ 0x82, 'Protocol Error'],\n    [ 0x83, 'Implementation specific error'],\n    [ 0x87, 'Not authorized'],\n    [ 0x89, 'Server busy'],\n    [ 0x8B, 'Server shutting down'],\n    [ 0x8D, 'Keep Alive timeout'],\n    [ 0x8E, 'Session taken over'],\n    [ 0x8F, 'Topic Filter invalid'],\n    [ 0x90, 'Topic Name invalid'],\n    [ 0x93, 'Receive Maximum exceeded'],\n    [ 0x94, 'Topic Alias invalid'],\n    [ 0x95, 'Packet too large'],\n    [ 0x96, 'Message rate too high'],\n    [ 0x97, 'Quota exceeded'],\n    [ 0x98, 'Administrative action'],\n    [ 0x99, 'Payload format invalid'],\n    [ 0x9A, 'Retain not supported'],\n    [ 0x9B, 'QoS not supported'],\n    [ 0x9C, 'Use another server'],\n    [ 0x9D, 'Server moved'],\n    [ 0x9E, 'Shared Subscriptions not supported'],\n    [ 0x9F, 'Connection rate exceeded'],\n    [ 0xA0, 'Maximum connect time'],\n    [ 0xA1, 'Subscription Identifiers not supported'],\n    [ 0xA2, 'Wildcard Subscriptions not supported'],\n  ]);\n\n\n  return ns[0xe] = (pkt, u8_body) => {\n    if (5 <= pkt.mqtt_level) {\n      const rdr = new mqtt_type_reader(u8_body, 0);\n      pkt.reason = rdr.u8_reason(_disconnect_reason_);\n      pkt.props = rdr.props();\n    }\n    return pkt }\n}\n\nfunction mqtt_decode_auth(ns) {\n  const _auth_reason_ = bind_reason_lookup([\n    // MQTT 5.0\n    [ 0x00, 'Success' ],\n    [ 0x18, 'Continue authentication' ],\n    [ 0x19, 'Re-authenticate' ],\n  ]);\n\n  return ns[0xf] = (pkt, u8_body) => {\n    if ( 5 <= pkt.mqtt_level ) {\n      const rdr = new mqtt_type_reader(u8_body, 0);\n      pkt.reason = rdr.u8_reason(_auth_reason_);\n      pkt.props = rdr.props();\n    }\n    return pkt }\n}\n\nfunction mqtt_pkt_writer_pool() {\n  const _pool_ = [];\n  return host =>\n    0 === _pool_.length\n      ? mqtt_pkt_writer(host, _pool_)\n      : _pool_.pop()(host)\n}\n\nfunction mqtt_pkt_writer(host, _pool_) {\n  // avoid GCing push/pull when they can be reused\n  let n=0, rope=[];\n  return install(host)\n\n  function install(_host) {\n    host = _host;\n    host.push = push;\n    host.pack = pack;\n  }\n\n  function push(u8) {\n    rope.push(u8);\n    n += u8.length;\n  }\n\n  function pack(hdr) {\n    host = host.push = host.pack = null;\n\n    const res = _mqtt_pkt_rope(hdr, n, rope);\n    n=0; rope=[];\n    if (undefined !== _pool_)\n      _pool_.push(install);\n\n    return res\n  }\n}\n\n\nfunction _mqtt_pkt_rope(hdr, n, rope) {\n  const header = encode_varint(n, hdr);\n  let i = header.length;\n\n  const pkt = new Uint8Array(n + i);\n  pkt.set(header, 0);\n  for (const vec of rope) {\n    pkt.set(vec, i);\n    i += vec.length;\n  }\n  return pkt\n}\n\nconst pack_utf8 = v => new TextEncoder('utf-8').encode(v);\nconst pack_u16 = v => [ (v>>>8) & 0xff, v & 0xff ];\nconst pack_u32 = v => [ (v>>>24) & 0xff, (v>>>16) & 0xff, (v>>>8) & 0xff, v & 0xff ];\n\nclass mqtt_type_writer {\n  constructor() {\n    this._pkt_writer(this);\n  }\n\n  as_pkt(hdr) { return this.pack([hdr]) }\n\n  u8(v) { this.push([ v & 0xff ]);}\n  u16(v) { this.push( pack_u16(v) );}\n  u32(v) { this.push( pack_u32(v) );}\n  vint(v) { this.push( encode_varint(v) );}\n\n  _u16_bin(u8_buf) {\n    const {push} = this;\n    push( pack_u16( u8_buf.byteLength ));\n    push( u8_buf );\n  }\n\n  flush(buf) {\n    if (null != buf)\n      this.push(\n        'string' === typeof buf\n          ? pack_utf8(buf) : buf );\n\n    this.push = false;\n  }\n\n  bin(u8_buf) {\n    if (! u8_buf) return this.u16(0)\n    if ('string' === typeof u8_buf)\n      return this.utf8(u8_buf)\n\n    if (u8_buf.length !== u8_buf.byteLength)\n      u8_buf = new Uint8Array(u8_buf);\n    this._u16_bin(u8_buf);\n  }\n\n  utf8(v) { this._u16_bin( new TextEncoder('utf-8').encode(v) ); }\n\n  pair(k,v) {\n    this.utf8(k);\n    this.utf8(v);\n  }\n\n  u8_flags(v, enc_flags, b0=0) {\n    if (undefined !== v && isNaN(+v))\n      v = enc_flags(v, 0);\n\n    v |= b0;\n    this.push([v]);\n    return v\n  }\n\n  u8_reason(v) { this.push([v | 0]); }\n\n  props(props) {\n    if (! props)\n      return this.u8(0)\n\n    if (! Array.isArray(props))\n      props = props.entries\n        ? Array.from(props.entries())\n        : Object.entries(props);\n\n    const wrt = this._fork();\n    for (const [name, value] of props) {\n      const {id, type} = mqtt_props.get(name);\n      wrt.u8(id);\n      wrt[type](value);\n    }\n\n    this.push(wrt.pack([]));\n  }\n}\n\nmqtt_type_writer.prototype._pkt_writer = \n  mqtt_pkt_writer_pool();\n\nconst _c_mqtt_proto = new Uint8Array([\n  0, 4, 0x4d, 0x51, 0x54, 0x54 ]);\n\nfunction mqtt_encode_connect(ns) {\n  const _enc_flags_connect = flags => 0\n      | ( flags.reserved ? 0x01 : 0 )\n      | ( (flags.will_qos & 0x3) << 3 )\n      | ( flags.clean_start ? 0x02 : 0 )\n      | ( flags.will_flag ? 0x04 : 0 )\n      | ( flags.will_retain ? 0x20 : 0 )\n      | ( flags.password ? 0x40 : 0 )\n      | ( flags.username ? 0x80 : 0 );\n\n  const _enc_flags_will = will => 0x4\n      | ( (will.qos & 0x3) << 3 )\n      | ( will.retain ? 0x20 : 0 );\n\n  return ns.connect = ( mqtt_level, pkt ) => {\n    const wrt = new mqtt_type_writer();\n\n    wrt.push(_c_mqtt_proto);\n    wrt.u8( mqtt_level );\n\n    const {will, username, password} = pkt;\n    const flags = wrt.u8_flags(\n      pkt.flags,\n      _enc_flags_connect,\n      0 | (username ? 0x80 : 0)\n        | (password ? 0x40 : 0)\n        | (will ? _enc_flags_will(will) : 0) );\n\n    wrt.u16(pkt.keep_alive);\n\n    if (5 <= mqtt_level)\n      wrt.props(pkt.props);\n\n\n    wrt.utf8(pkt.client_id);\n    if (flags & 0x04) { // .will_flag\n      if (5 <= mqtt_level)\n        wrt.props(will.props);\n\n      wrt.utf8(will.topic);\n      wrt.bin(will.payload);\n    }\n\n    if (flags & 0x80) // .username\n      wrt.utf8(username);\n\n    if (flags & 0x40) // .password\n      wrt.bin(password);\n\n    return wrt.as_pkt(0x10)\n  }\n}\n\nfunction mqtt_encode_connack(ns) {\n  const _enc_flags_connack = flags =>\n    flags.session_present ? 1 : 0;\n\n  return ns.connack = (mqtt_level, pkt) => {\n    const wrt = new mqtt_type_writer();\n    wrt.u8_flags( pkt.flags, _enc_flags_connack );\n\n    if (5 <= mqtt_level) {\n      wrt.u8_reason( pkt.reason );\n      wrt.props( pkt.props );\n\n    } else {\n      wrt.u8_reason( pkt.return_code || pkt.reason );\n    }\n\n    return wrt.as_pkt(0x20)\n  }\n}\n\nfunction mqtt_encode_publish(ns) {\n  return ns.publish = ( mqtt_level, pkt ) => {\n    const qos = (pkt.qos & 0x3) << 1;\n    const wrt = new mqtt_type_writer();\n\n    wrt.utf8(pkt.topic);\n    if (0 !== qos)\n      wrt.u16(pkt.pkt_id);\n\n    if ( 5 <= mqtt_level) {\n      wrt.props(pkt.props);\n      wrt.flush(pkt.payload);\n    } else {\n      wrt.flush(pkt.payload);\n    }\n\n    return wrt.as_pkt(\n      0x30 | qos | (pkt.dup ? 0x8 : 0) | (pkt.retain ? 0x1 : 0) )\n  }\n}\n\nfunction mqtt_encode_puback(ns) {\n  return ns.puback = ( mqtt_level, pkt ) => {\n    const wrt = new mqtt_type_writer();\n\n    wrt.u16(pkt.pkt_id);\n    if (5 <= mqtt_level) {\n      wrt.u8_reason(pkt.reason);\n      wrt.props(pkt.props);\n    }\n\n    return wrt.as_pkt(0x40)\n  }\n}\n\nfunction mqtt_encode_pubxxx(ns) {\n  ns.pubrec = _enc_pubxxx(0x50);\n  ns.pubrel = _enc_pubxxx(0x62);\n  ns.pubcomp = _enc_pubxxx(0x70);\n\n\n  function _enc_pubxxx(hdr) {\n    return ( mqtt_level, pkt ) => {\n      const wrt = new mqtt_type_writer();\n\n      wrt.u16(pkt.pkt_id);\n      if (5 <= mqtt_level) {\n        wrt.props(pkt.props);\n        wrt.u8_reason(pkt.reason);\n\n      } else {\n        wrt.u8_reason( pkt.return_code || pkt.reason );\n      }\n\n      return wrt.as_pkt(hdr)\n    }\n  }\n}\n\nfunction mqtt_encode_subscribe(ns) {\n  const _enc_subscribe_flags = opts => 0\n      | ( opts.qos & 0x3 )\n      | ( opts.retain ? 0x4 : 0 )\n      | ( (opts.retain_handling & 0x3) << 2 );\n\n  return ns.subscribe = ( mqtt_level, pkt ) => {\n    const wrt = new mqtt_type_writer();\n\n    wrt.u16(pkt.pkt_id);\n    if (5 <= pkt.mqtt_level)\n      wrt.props(pkt.props);\n\n    const f0 = _enc_subscribe_flags(pkt);\n    for (const each of pkt.topics) {\n      if ('string' === typeof each) {\n        wrt.utf8(each);\n        wrt.u8(f0);\n      }\n\n      else if (Array.isArray(each)) {\n        wrt.utf8(each[0]);\n        if (undefined !== each[1])\n          wrt.u8_flags(each[1], _enc_subscribe_flags);\n        else wrt.u8(f0);\n\n      } else {\n        wrt.utf8(each.topic);\n        if (undefined !== each.opts)\n          wrt.u8_flags(each.opts, _enc_subscribe_flags);\n        else wrt.u8(f0);\n      }\n    }\n\n    return wrt.as_pkt(0x82)\n  }\n}\n\nfunction mqtt_encode_xxsuback(ns) {\n  ns.suback = _enc_xxsuback(0x90);\n  ns.unsuback = _enc_xxsuback(0xb0);\n\n\n  function _enc_xxsuback(hdr) {\n    return ( mqtt_level, pkt ) => {\n      const wrt = new mqtt_type_writer();\n\n      wrt.u16(pkt.pkt_id);\n      if (5 <= pkt.mqtt_level)\n        wrt.props(pkt.props);\n\n      for (const ans of pkt.answers)\n        wrt.u8_reason(ans);\n\n      return wrt.as_pkt(hdr)\n    }\n  }\n}\n\nfunction mqtt_encode_unsubscribe(ns) {\n  return ns.unsubscribe = ( mqtt_level, pkt ) => {\n    const wrt = new mqtt_type_writer();\n\n    wrt.u16(pkt.pkt_id);\n    if (5 <= pkt.mqtt_level)\n      wrt.props(pkt.props);\n\n    for (const topic of pkt.topics)\n      wrt.utf8(topic);\n\n    return wrt.as_pkt(0xa2)\n  }\n}\n\nfunction mqtt_encode_pingxxx(ns) {\n  ns.pingreq  = () => new Uint8Array([ 0xc0, 0 ]);\n  ns.pingresp = () => new Uint8Array([ 0xd0, 0 ]);\n}\n\nfunction mqtt_encode_disconnect(ns) {\n  return ns.disconnect = ( mqtt_level, pkt ) => {\n    const wrt = new mqtt_type_writer();\n\n    if (5 <= mqtt_level) {\n      wrt.u8_reason(pkt.reason);\n      wrt.props(pkt.props);\n    }\n\n    return wrt.as_pkt(0xe0)\n  }\n}\n\nfunction mqtt_encode_auth(ns) {\n  return ns.auth = ( mqtt_level, pkt ) => {\n    if (5 > mqtt_level)\n      throw new Error('Auth packets are only available after MQTT 5.x')\n\n    const wrt = new mqtt_type_writer();\n\n    wrt.u8_reason(pkt.reason);\n    wrt.props(pkt.props);\n\n    return wrt.as_pkt(0xf0)\n  }\n}\n\nconst mqtt_decode_zero = ns => (ns[0] = pkt => pkt);\n\n\nfunction _bind_mqtt_decode(lst_decode_ops) {\n  const by_id = [];\n  for (const op of lst_decode_ops) op(by_id);\n\n  return _pkt_ctx_ => _mqtt_raw_pkt_dispatch(\n    (b0, u8_body) => {\n      const decode_pkt = by_id[b0>>>4] || by_id[0];\n      if (undefined !== decode_pkt)\n        return decode_pkt({__proto__: _pkt_ctx_, b0}, u8_body)\n    })\n}\n\n\nfunction _bind_mqtt_encode(lst_encode_ops) {\n  const by_type = {};\n  for (const op of lst_encode_ops) op(by_type);\n\n  return ({mqtt_level}) => (type, pkt) =>\n      by_type[type]( mqtt_level, pkt )\n}\n\n\nconst _pkt_types = ['reserved', 'connect', 'connack', 'publish', 'puback', 'pubrec', 'pubrel', 'pubcomp', 'subscribe', 'suback', 'unsubscribe', 'unsuback', 'pingreq', 'pingresp', 'disconnect', 'auth'];\nconst _bind_pkt_ctx = _pkt_ctx_ =>\n  Object.defineProperties(_pkt_ctx_ || {}, {\n    hdr:  {get() { return this.b0 & 0xf }},\n    id:   {get() { return this.b0 >>> 4 }},\n    type: {get() { return _pkt_types[this.b0 >>> 4] }},\n  });\n\nfunction _bind_mqtt_session_ctx(sess_decode, sess_encode, _pkt_ctx_) {\n  sess_decode = _bind_mqtt_decode(sess_decode);\n  sess_encode = _bind_mqtt_encode(sess_encode);\n  _pkt_ctx_ = _bind_pkt_ctx(_pkt_ctx_);\n\n  return mqtt_level => ()=> {\n    let _base_ = {__proto__: _pkt_ctx_, mqtt_level, get _base_() { return _base_ }};\n    return [ sess_decode(_base_), sess_encode(_base_)] }\n}\n\nfunction mqtt_session_ctx(mqtt_level) {\n  let {ctx} = mqtt_session_ctx;\n  if ( undefined === ctx ) {\n    mqtt_session_ctx.ctx = ctx =\n      _bind_mqtt_session_ctx(\n        [ // lst_decode_ops = [\n          mqtt_decode_zero,\n          mqtt_decode_connect,\n          mqtt_decode_connack,\n          mqtt_decode_publish,\n          mqtt_decode_puback,\n          mqtt_decode_pubxxx,\n          mqtt_decode_subscribe,\n          mqtt_decode_suback,\n          mqtt_decode_unsubscribe,\n          mqtt_decode_unsuback,\n          mqtt_decode_pingxxx,\n          mqtt_decode_disconnect,\n          mqtt_decode_auth, ],\n        [ // lst_encode_ops = [\n          mqtt_encode_connect,\n          mqtt_encode_connack,\n          mqtt_encode_publish,\n          mqtt_encode_puback,\n          mqtt_encode_pubxxx,\n          mqtt_encode_subscribe,\n          mqtt_encode_xxsuback,\n          mqtt_encode_unsubscribe,\n          mqtt_encode_pingxxx,\n          mqtt_encode_disconnect,\n          mqtt_encode_auth, ]);\n  }\n\n  return ctx(mqtt_level)\n}\n\nconst mqtt_session_v4 = ()=> mqtt_session_ctx(4)();\nconst mqtt_session_v5 = ()=> mqtt_session_ctx(5)();\n\nexport { _bind_mqtt_decode, _bind_mqtt_encode, _bind_mqtt_session_ctx, _bind_pkt_ctx, _mqtt_pkt_rope, _mqtt_raw_pkt_decode_v, _mqtt_raw_pkt_dispatch, bind_reason_lookup, decode_varint, encode_varint, mqtt_decode_auth, mqtt_decode_connack, mqtt_decode_connect, mqtt_decode_disconnect, mqtt_decode_pingxxx, mqtt_decode_puback, mqtt_decode_publish, mqtt_decode_pubxxx, mqtt_decode_suback, mqtt_decode_subscribe, mqtt_decode_unsuback, mqtt_decode_unsubscribe, mqtt_decode_zero, mqtt_encode_auth, mqtt_encode_connack, mqtt_encode_connect, mqtt_encode_disconnect, mqtt_encode_pingxxx, mqtt_encode_puback, mqtt_encode_publish, mqtt_encode_pubxxx, mqtt_encode_subscribe, mqtt_encode_unsubscribe, mqtt_encode_xxsuback, mqtt_pkt_writer, mqtt_pkt_writer_pool, mqtt_props, mqtt_session_ctx, mqtt_session_v4, mqtt_session_v5, mqtt_type_reader, mqtt_type_writer };\n//# sourceMappingURL=index.mjs.map\n","import {\n  _bind_mqtt_session_ctx,\n\n  mqtt_decode_connack,\n  mqtt_decode_publish,\n  mqtt_decode_puback,\n  mqtt_decode_pubxxx,\n  mqtt_decode_pingxxx,\n  mqtt_decode_suback,\n  mqtt_decode_unsuback,\n  mqtt_decode_auth,\n\n  mqtt_encode_connect,\n  mqtt_encode_disconnect,\n  mqtt_encode_publish,\n  mqtt_encode_puback,\n  mqtt_encode_pingxxx,\n  mqtt_encode_subscribe,\n  mqtt_encode_unsubscribe,\n  mqtt_encode_auth,\n} from 'u8-mqtt-packet'\n\n\nexport default mqtt_session_ctx\nexport function mqtt_session_ctx(mqtt_level) {\n  let {ctx} = mqtt_session_ctx\n  if (undefined === ctx ) {\n    const as_utf8 = u8 =>\n      new TextDecoder('utf-8').decode(u8)\n\n    const std_pkt_api = {\n      utf8(u8) { return as_utf8( u8 || this.payload ) },\n      json(u8) { return JSON.parse( as_utf8( u8 || this.payload )) },\n    }\n\n    mqtt_session_ctx.ctx = ctx =\n      _bind_mqtt_session_ctx(\n        [ // lst_decode_ops\n          mqtt_decode_connack,\n          mqtt_decode_publish,\n          mqtt_decode_puback,\n          mqtt_decode_pubxxx,\n          mqtt_decode_pingxxx,\n          mqtt_decode_suback,\n          mqtt_decode_unsuback,\n          mqtt_decode_auth, ],\n\n        [ // lst_encode_ops\n          mqtt_encode_connect,\n          mqtt_encode_disconnect,\n          mqtt_encode_publish,\n          mqtt_encode_puback,\n          mqtt_encode_pingxxx,\n          mqtt_encode_subscribe,\n          mqtt_encode_unsubscribe,\n          mqtt_encode_auth, ],\n\n        std_pkt_api )\n  }\n\n  return ctx(mqtt_level)\n}\n\n","export function _mqtt_conn(client, [on_mqtt, pkt_future]) ::\n  const q0 = _tiny_deferred_queue()\n  const q = _tiny_deferred_queue()\n\n  const _asy_send = async (...args) =>\n    (await q)(...args)\n  let _send = client._send = _asy_send\n\n  const _ping = () => client._send('pingreq')\n  let tid_ping, _is_set = false\n\n  return @{}\n    is_live: @=> _asy_send !== _send\n    is_set: @=> _is_set\n\n    reset() ::\n      tid_ping = clearInterval(tid_ping)\n      client._send = _send = _asy_send\n      _is_set = false\n\n      // call client.on_reconnect in next promise microtask\n      Promise.resolve(client)\n        .then(client.on_reconnect)\n\n    ping(td) ::\n      tid_ping = clearInterval(tid_ping)\n      if td ::\n        tid_ping = setInterval(_ping, 1000 * td)\n        if tid_ping.unref ::\n          tid_ping.unref()\n\n    async send_connect(... args) ::\n      if _asy_send === _send ::\n        _send = await q0\n\n      // await connack response\n      const res = await _send(...args)\n\n      client._send = _send\n      q.notify(_send)\n      return res\n\n    set(mqtt_session, send_u8_pkt) ::\n      _is_set = true\n\n      const [mqtt_decode, mqtt_encode] =\n        mqtt_session()\n\n      const on_mqtt_chunk = u8_buf =>\n        on_mqtt(\n          mqtt_decode(u8_buf),\n          {mqtt: client})\n\n      _send = async (type, pkt, key) => ::\n        const res = undefined !== key\n          ? pkt_future(key) : true\n\n        await send_u8_pkt @\n          mqtt_encode(type, pkt)\n\n        return res\n\n\n      q0.notify(_send)\n\n      // call client.on_live in next promise microtask\n      Promise.resolve(client)\n        .then(client.on_live)\n\n      return on_mqtt_chunk\n\n\nfunction _tiny_deferred_queue() {\n  const q = [] // tiny resetting deferred queue\n  q.then = y => { q.push(y) }\n  q.notify = v => { for (const fn of q.splice(0,q.length)) fn(v) }\n  return q\n}\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","// Use [regexparam][] for url-like topic parsing\n//  [regexparam]: https://github.com/lukeed/regexparam\n\nimport _rxp_parse from 'regexparam/dist/regexparam.mjs'\n\nfunction _ignore(pkt, params, ctx) :: ctx.done = true\n\nexport function _mqtt_topic_router() ::\n  const pri_lsts=[[],[]]\n  const find = topic => _mqtt_routes_iter(pri_lsts, topic)\n\n  return @{} find,\n\n    add(topic_route, ...args) ::\n      let fn = args.pop()\n      const priority = args.pop()\n\n      if 'function' !== typeof fn ::\n        if false === fn ::\n          fn = _ignore\n        else throw new TypeError()\n\n      let rte = _rxp_parse @\n        topic_route.replace(/[+#]$/, '*')\n\n      rte.tgt = fn\n      pri_lsts[priority ? 0 : 1].push(rte)\n      return this\n\n    async invoke(pkt, ctx) ::\n      ctx.idx = 0\n\n      for const [fn, params] of find(pkt.topic) ::\n        await fn(pkt, params, ctx)\n\n        if ctx.done ::\n          break\n        else ctx.idx++\n\n      const {pkt_id, qos} = pkt\n      if 1 === qos ::\n        await ctx.mqtt._send('puback', {pkt_id})\n\n\nexport function * _mqtt_routes_iter(all_route_lists, topic) ::\n  for const route_list of all_route_lists ::\n    for const route of route_list ::\n      const res = _mqtt_route_match_one(topic, route)\n      if undefined !== res ::\n        yield res\n\n\nexport function _mqtt_route_match_one(topic, {keys, pattern, tgt}) ::\n  const match = pattern.exec('/'+topic)\n  if null === match ::\n    return\n\n  if false === keys ::\n    const {groups} = match\n    if ! groups ::\n      return [tgt]\n\n    const params = {}\n    for let k in groups ::\n      params[k] = groups[k]\n\n    return [tgt, params]\n\n  if 0 === keys.length ::\n    return [tgt]\n\n  const params = {}\n  for let i=0; i<keys.length; i++ ::\n    params[ keys[i] ] = match[1+i]\n  return [tgt, params]\n\n","\nexport const _mqtt_cmdid_dispatch = @{}\n  create(target) ::\n    return @{} __proto__: this, target, hashbelt: [new Map()]\n\n  bind_pkt_future(_pkt_id=100) ::\n    const {hashbelt} = this\n\n    let _tmp_ // use _tmp_ to reuse _by_key closure\n    const _by_key = answer_monad =>\n      hashbelt[0].set(_tmp_, answer_monad)\n\n    return @\\ pkt_or_key ::\n      if 'string' === typeof pkt_or_key ::\n        _tmp_ = pkt_or_key\n      else ::\n        _pkt_id = (_pkt_id + 1) & 0xffff\n        _tmp_ = pkt_or_key.pkt_id = _pkt_id\n\n      return new Promise(_by_key)\n\n  answer(key, pkt) ::\n    for const map of this.hashbelt ::\n      const answer_monad = map.get(key)\n      if undefined !== answer_monad ::\n        map.delete(key)\n\n        answer_monad([pkt, /*err*/]) // option/maybe monad\n        return true\n    return false\n\n  rotate_belt(n) ::\n    const {hashbelt} = this\n    hashbelt.unshift @ new Map()\n    for const old of hashbelt.splice(n || 5) ::\n      for const answer_monad of old.values() ::\n        answer_monad([/*pkt*/, 'expired']) // option/maybe monad\n\n  cmdids: @!\n    return @[]\n      @=>{}    // 0x0 reserved\n      by_evt   // 0x1 connect\n      by_type  // 0x2 connack\n      by_evt   // 0x3 publish\n      by_id    // 0x4 puback\n      by_id    // 0x5 pubrec\n      by_id    // 0x6 pubrel\n      by_id    // 0x7 pubcomp\n      by_evt   // 0x8 subscribe\n      by_id    // 0x9 suback\n      by_evt   // 0xa unsubscribe\n      by_id    // 0xb unsuback\n      by_type  // 0xc pingreq\n      by_type  // 0xd pingresp\n      by_evt   // 0xe disconnect\n      by_type  // 0xf auth\n\n\n    function by_id(disp, pkt) ::\n      disp.answer @ pkt.pkt_id, pkt\n\n    function by_type(disp, pkt, ctx) ::\n      disp.answer @ pkt.type, pkt\n      by_evt(disp, pkt, ctx)\n\n    async function by_evt({target}, pkt, ctx) ::\n      const fn = target[`mqtt_${pkt.type}`]\n        || target.mqtt_pkt\n\n      if undefined !== fn ::\n        await fn.call(target, pkt, ctx)\n\n\n","import {_mqtt_cmdid_dispatch} from './_cmdid_dispatch.jsy'\n\nexport function _mqtt_dispatch(opt, target) ::\n  const _disp_ = _mqtt_cmdid_dispatch.create(target)\n  const { cmdids } = _disp_\n\n  // default rotate at 1s across 5 buckets\n  const { td: rotate_td=1000, n: rotate_n=5 } =\n    opt && opt.rotate || {}\n\n  let rotate_ts = rotate_td + Date.now()\n\n  return @[] on_mqtt,\n    _disp_.bind_pkt_future()\n\n  function on_mqtt(pkt_list, ctx) ::\n    for const pkt of pkt_list ::\n      cmdids[pkt.id] @ _disp_, pkt, ctx\n\n    if Date.now() > rotate_ts ::\n      _disp_.rotate_belt(rotate_n)\n      rotate_ts = rotate_td + Date.now()\n\n","import {_mqtt_conn} from './_conn.jsy'\nimport {_mqtt_topic_router} from './_router.jsy'\nimport {_mqtt_dispatch} from './_dispatch.jsy'\n\nexport default MQTTBaseClient\nexport class MQTTBaseClient ::\n  constructor(opt={}) ::\n    this._conn_ = _mqtt_conn @ this,\n      this._init_dispatch(opt, this)\n\n  // Handshaking Packets\n\n  async connect(pkt={}) ::\n    let {client_id: cid} = pkt\n    if ! cid ::\n      pkt.client_id = cid = this.init_client_id(['u8-mqtt--', ''])\n    else if Array.isArray(cid) ::\n      pkt.client_id = cid = this.init_client_id(cid)\n    else :: this.client_id = cid\n\n    if null == pkt.keep_alive ::\n      pkt.keep_alive = 60\n\n    const res = await this._conn_\n      .send_connect @ 'connect', pkt, 'connack'\n\n    // TODO: merge with server's keep_alive frequency\n    this._conn_.ping(pkt.keep_alive)\n    return res\n\n  async disconnect(pkt={}) ::\n    const res = await this._send('disconnect', pkt)\n    this._conn_.reset()\n    return res\n\n  auth(pkt={}) ::\n    return this._send('auth', pkt, 'auth')\n\n  ping() :: return this._send('pingreq', null, 'pingresp')\n\n\n  // alias: sub\n  subscribe(pkt, ex) ::\n    pkt = _as_topics(pkt, ex)\n    return this._send('subscribe', pkt, pkt)\n\n  // alias: unsub\n  unsubscribe(pkt, ex) ::\n    pkt = _as_topics(pkt, ex)\n    return this._send('unsubscribe', pkt, pkt)\n\n  // alias: sub_route\n  subscribe_topic(topic_route, ...args) ::\n    let topic = topic_route.replace(/[:*].*$/, '#')\n    this.on_topic @ topic_route, true, args.pop() // handler\n    this.subscribe @ [[ topic ]], args.pop() // ex\n    return this\n\n\n  // alias: pub\n  publish(pkt) :: return _pub(this, pkt)\n  post(topic, payload) :: return _pub(this, {qos:0, topic, payload})\n  send(topic, payload) :: return _pub(this, {qos:1, topic, payload})\n  json_post(topic, msg) :: return _pub(this, {qos:0, topic, msg, arg:'msg'})\n  json_send(topic, msg) :: return _pub(this, {qos:1, topic, msg, arg:'msg'})\n\n\n\n  // Utility Methods\n\n  init_client_id(parts) ::\n    let cid = this.client_id\n\n    if undefined === cid ::\n      this.client_id = cid = (\n        #IF PLAT_WEB\n          this.sess_client_id(parts)\n        #ELSE\n          this.new_client_id(parts)\n        )\n\n    return cid\n\n  new_client_id(parts) ::\n    return [parts[0], Math.random().toString(36).slice(2), parts[1]].join('')\n\n  #IF PLAT_WEB\n    sess_client_id(parts) ::\n      let key = `client_id ${parts.join('')}`\n      let cid = sessionStorage.getItem(key)\n      if null == cid ::\n        cid = this.new_client_id(parts)\n        sessionStorage.setItem(key, cid)\n      return cid\n\n\n  // Internal API\n\n  /* async _send(type, pkt) -- provided by _conn_ and transport */\n\n  _init_router(opt) ::\n    const router = _mqtt_topic_router(this)\n    this.on_topic = router.add\n    return this.router = router\n\n  _init_dispatch(opt) ::\n    const router = this._init_router(opt, this)\n\n    const tgt = @{}\n      __proto__: opt.on_mqtt_type || {}\n      mqtt_publish: router.invoke\n\n    return _mqtt_dispatch @ this, tgt\n\n\n::\n  const p = MQTTBaseClient.prototype\n  Object.assign @ p, @{}\n    pub: p.publish\n    sub: p.subscribe\n    unsub: p.unsubscribe\n    sub_topic: p.subscribe_topic\n\n  /*\n    p.on_mqtt_type = {\n      mqtt_auth(pkt, ctx) ::\n      mqtt_connect(pkt, ctx) ::\n      mqtt_connack(pkt, ctx) ::\n      mqtt_disconnect(pkt, ctx) ::\n\n      mqtt_subscribe(pkt, ctx) ::\n      mqtt_unsubscribe(pkt, ctx) ::\n\n      mqtt_pingreq(pkt, ctx) ::\n      mqtt_pingresp(pkt, ctx) ::\n    }\n  */\n\n\nfunction _pub(self, pkt) ::\n  let key, {qos, msg, payload} = pkt\n  if undefined === payload ::\n    if undefined === msg ::\n      const arg = pkt.arg || 'payload'\n      return v => _pub @ self, {...pkt, [arg]: v}\n\n    pkt.payload = JSON.stringify(msg)\n\n  if (1 === qos) key = pkt\n  return self._send('publish', pkt, key)\n\nfunction _as_topics(pkt, ex) ::\n  if 'string' === typeof pkt ::\n    return {topics:[pkt], ... ex}\n  if pkt[Symbol.iterator] ::\n    return {topics:[... pkt], ... ex}\n  return ex ? {...pkt, ...ex} : pkt\n\n","import MQTTBaseClient from './base.jsy'\n\n#IF PLAT_NODEJS\n  import {connect as tcp_connect} from 'net'\n\n\nexport default MQTTCoreClient\nexport class MQTTCoreClient extends MQTTBaseClient ::\n  static _with_session(mqtt_session) ::\n    this.prototype._mqtt_session = mqtt_session\n\n  constructor(opt={}) ::\n    super(opt)\n    this.with_live(opt.on_live)\n    this.with_reconnnect(opt.on_reconnect)\n\n\n  // on_live(client) ::\n  with_live(on_live) ::\n    if on_live ::\n      this.on_live = on_live\n\n    return this\n\n  // on_reconnect(client) ::\n  with_reconnnect(on_reconnnect) ::\n    if on_reconnnect ::\n      this.on_reconnnect = on_reconnnect\n\n      if ! this._conn_.is_set ::\n        on_reconnnect(this)\n\n    return this\n\n\n  with_async_iter(async_iter, write_u8_pkt) ::\n    const on_mqtt_chunk = this._conn_.set(\n      this._mqtt_session, write_u8_pkt)\n\n    this._msg_loop = @!>\n      for await (const chunk of async_iter)\n        on_mqtt_chunk(chunk)\n\n      this._conn_.reset()\n\n    return this\n\n\n  #IF PLAT_DENO\n    async with_tcp(port, hostname) ::\n      if !Number.isFinite(port) ::\n        ({port, host: hostname} = port)\n\n      const conn = await Deno.connect @:\n        port: port || 1883, hostname, transport: 'tcp'\n\n      return this.with_async_iter @\n        Deno.iter(conn),\n        u8_pkt => conn.write(u8_pkt)\n\n\n  #IF PLAT_NODEJS\n    async with_tcp(port, hostname) ::\n      if !Number.isFinite(port) ::\n        ({port, host: hostname} = port)\n\n      const sock = tcp_connect(port, hostname)\n      return this.with_stream(sock)\n\n\n  #IF HAS_STREAM\n    with_stream(read_stream, write_stream) ::\n      if undefined === write_stream ::\n        write_stream = read_stream\n\n      read_stream.once @ 'end', this._conn_.reset\n      return this.with_async_iter @ read_stream,\n        u8_pkt => write_stream.write(u8_pkt)\n\n\n\n\n  with_websock(websock) ::\n    if null == websock ::\n      websock = 'ws://127.0.0.1:9001'\n\n    if websock.origin || 'string' === typeof websock ::\n      websock = new WebSocket(new URL(websock), ['mqtt'])\n\n    websock.binaryType = 'arraybuffer'\n\n    let ready, {readyState} = websock\n    if 1 !== readyState ::\n      if 0 !== readyState ::\n        throw new Error @ 'Invalid WebSocket readyState'\n\n      ready = new Promise( y =>\n        websock.addEventListener('open', y, {once: true}))\n\n\n    const {_conn_} = this\n    const on_mqtt_chunk = _conn_.set @\n      this._mqtt_session\n      async u8_pkt => @\n        await ready\n        websock.send(u8_pkt)\n\n    websock.addEventListener @ 'close',\n      @::\n        delete websock.onmessage\n        _conn_.reset()\n\n      {once: true}\n\n    websock.onmessage = evt =>\n      on_mqtt_chunk @\n        new Uint8Array(evt.data)\n\n    return this\n\n","import mqtt_session_ctx from './session.mjs'\nimport MQTTCore from './core.jsy'\n\nclass MQTTClient_v4 extends MQTTCore {}\nMQTTClient_v4._with_session(mqtt_session_ctx(4))\n\nconst mqtt_v4 = opt => new MQTTClient_v4(opt)\n\nexport {\n  MQTTClient_v4,\n  MQTTClient_v4 as MQTTClient,\n\n  mqtt_v4,\n  mqtt_v4 as mqtt,\n  mqtt_v4 as default,\n}\n"],"names":["MQTTCore"],"mappings":"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"}