import {_mqtt_cmdid_dispatch} from './_cmdid_dispatch.jsy'

export function _mqtt_dispatch(opt, target) ::
  let _disp_ = _mqtt_cmdid_dispatch.create(target)
  let { cmdids } = _disp_

  // default rotate at 1s across 5 buckets
  let { td: rotate_td=1000, n: rotate_n=5 } =
    opt && opt.rotate || {}

  let rotate_ts = rotate_td + Date.now()

  return @[] on_mqtt,
    _disp_.bind_pkt_future()

  function on_mqtt(pkt_list, ctx) ::
    for let pkt of pkt_list ::
      cmdids[pkt.id] @ _disp_, pkt, ctx

    if Date.now() > rotate_ts ::
      _disp_.rotate_belt(rotate_n)
      rotate_ts = rotate_td + Date.now()

