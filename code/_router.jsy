// Use [regexparam][] for url-like topic parsing
//  [regexparam]: https://github.com/lukeed/regexparam

import _rxp_parse from 'regexparam/dist/regexparam.mjs'

export function _mqtt_topic_router() ::
  const lst=[], find=_iter_topic_routes.bind(null, lst)
  const self = @{} find, invoke, on_msg, add: on_msg
  return self

  function on_msg(route, tgt) ::
    route = _rxp_parse(route)
    route.tgt = tgt
    lst.push(route)
    return self

  function invoke(pkt) ::
    for const [fn, kw] of find(pkt.topic) ::
      return undefined !== kw
        ? fn(kw, pkt)
        : fn(pkt)



function * _iter_topic_routes(route_list, topic) ::
  for const route of route_list ::
    const {keys, pattern, tgt} = route

    const match = pattern.exec('/'+topic)
    if null === match ::
      continue

    if false === keys ::
      const {groups} = match
      if groups ::
        const kw = {}
        for let k in groups ::
          kw[k] = groups[k]

        yield [tgt, kw]

      else yield [tgt]

    else if 0 !== keys.length ::
      const kw = {}
      for let i=0; i<keys.length; i++ ::
        kw[ keys[i] ] = match[1+i]
      yield [tgt, kw]

    else yield [tgt]

